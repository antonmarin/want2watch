services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    public: false

  Core\UseCases\EventsBus: '@Infrastructure\Integrations\EventsBus\DummyEventsBus'
  Core\Domain\Movie\Database: '@Infrastructure\Integrations\MovieDatabase\NullDatabase'
  Core\Domain\Movie\LibrarianMovieRepository: '@Infrastructure\Integrations\MovieRepository\NullRepository'

  Infrastructure\:
    resource: '../*'

  Infrastructure\Endpoints\Cli\GenerateFromOpenApi:
    arguments:
      - '%kernel.project_dir%/http/specification.yml'

  Infrastructure\Http\OpenApiCodeGenerator\NetteGenerator:
    arguments:
      - '%kernel.project_dir%/src/Core/Endpoints/Http'
      - 'Core\Endpoints\Http'

  Infrastructure\Http\SymfonyHttpKernel\JsonRequestTransformerListener:
    tags:
      - { name: kernel.event_listener, event: !php/const \Symfony\Component\HttpKernel\KernelEvents::REQUEST }

  Infrastructure\Http\SymfonyHttpKernel\RequestDTOResolver:
    tags:
      - { name: controller.request_value_resolver, priority: 50 }

  logger.critical:
    class: Symfony\Component\HttpKernel\Log\Logger
    arguments:
      - !php/const Psr\Log\LogLevel::CRITICAL
  logger.notice:
    class: Symfony\Component\HttpKernel\Log\Logger
    arguments:
      - !php/const Psr\Log\LogLevel::NOTICE
  logger.info:
    class: Symfony\Component\HttpKernel\Log\Logger
    arguments:
      - !php/const Psr\Log\LogLevel::INFO
  logger.debug:
    class: Symfony\Component\HttpKernel\Log\Logger
    arguments:
      - !php/const Psr\Log\LogLevel::DEBUG
